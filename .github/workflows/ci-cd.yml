name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:7-jammy
        env:
          MONGO_INITDB_ROOT_USERNAME: test
          MONGO_INITDB_ROOT_PASSWORD: test
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          cd client && npm install
          cd ../server && npm install

      - name: Lint code
        run: |
          cd client && npm run lint
          cd ../server && npm run lint

      - name: Run server tests
        run: cd server && npm test
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://test:test@localhost:27017/test?authSource=admin
          REDIS_URL: redis://localhost:6379
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AUTH0_DOMAIN: test.auth0.com
          JWT_SECRET: test-secret-for-ci-testing-minimum-32-chars

      - name: Run client tests
        run: cd client && npm test

      - name: Build server
        run: cd server && npm run build

      - name: Build client
        run: cd client && npm run build
        env:
          VITE_AUTH0_DOMAIN: test.auth0.com
          VITE_AUTH0_CLIENT_ID: test-client-id
          VITE_AUTH0_AUDIENCE: https://test.api

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push server image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/pagepersonai-server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push client image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/pagepersonai-client:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Optional: Deploy to cloud provider
      # - name: Deploy to Railway/Render/DigitalOcean
      #   run: |
      #     # Add your deployment commands here
      #     echo "Deploying to production..."
